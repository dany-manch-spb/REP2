# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'addEditCoffeeForm.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sqlite3

from PyQt5 import QtCore, QtWidgets


class Ui_Dialog(QtWidgets.QMainWindow):
    def setupUi(self, *args):
        self.__main_form = args[0]
        self.__db_name = args[1]
        self.__id = args[2]

        if (self.__id == 0):
            self.setWindowTitle("Добавление")
        else:
            self.setWindowTitle("Редактирование")

        self.setWindowModality(QtCore.Qt.ApplicationModal)

        self.resize(400, 390)
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(20, 20, 81, 19))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setGeometry(QtCore.QRect(120, 20, 241, 25))
        self.lineEdit.setObjectName("lineEdit")
        self.label_2 = QtWidgets.QLabel(self)
        self.label_2.setGeometry(QtCore.QRect(20, 150, 141, 19))
        self.label_2.setObjectName("label_2")
        self.comboBox = QtWidgets.QComboBox(self)
        self.comboBox.setGeometry(QtCore.QRect(180, 150, 181, 25))
        self.comboBox.setObjectName("comboBox")
        self.label_3 = QtWidgets.QLabel(self)
        self.label_3.setGeometry(QtCore.QRect(20, 200, 81, 19))
        self.label_3.setObjectName("label_3")
        self.checkBox = QtWidgets.QCheckBox(self)
        self.checkBox.setGeometry(QtCore.QRect(180, 200, 91, 23))
        self.checkBox.setText("")
        self.checkBox.setObjectName("checkBox")
        self.label_4 = QtWidgets.QLabel(self)
        self.label_4.setGeometry(QtCore.QRect(20, 240, 81, 19))
        self.label_4.setObjectName("label_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(self)
        self.lineEdit_2.setGeometry(QtCore.QRect(180, 240, 121, 25))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_5 = QtWidgets.QLabel(self)
        self.label_5.setGeometry(QtCore.QRect(20, 290, 131, 19))
        self.label_5.setObjectName("label_5")
        self.lineEdit_3 = QtWidgets.QLineEdit(self)
        self.lineEdit_3.setGeometry(QtCore.QRect(180, 290, 121, 25))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_6 = QtWidgets.QLabel(self)
        self.label_6.setGeometry(QtCore.QRect(20, 60, 81, 19))
        self.label_6.setObjectName("label_6")
        self.textEdit = QtWidgets.QTextEdit(self)
        self.textEdit.setGeometry(QtCore.QRect(120, 60, 241, 71))
        self.textEdit.setObjectName("textEdit")
        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(80, 350, 88, 27))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self)
        self.pushButton_2.setGeometry(QtCore.QRect(210, 350, 88, 27))
        self.pushButton_2.setObjectName("pushButton_2")

        self.retranslateUi()

        self.comboBox.clear()
        self.comboBox.addItem("")
        self.comboBox.addItem("слабая")
        self.comboBox.addItem("средняя")
        self.comboBox.addItem("сильная")

        self.pushButton.clicked.connect(self.__save)
        self.pushButton_2.clicked.connect(self.__exit)

        if (self.__id > 0):
            self.__ReadData()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.label.setText(_translate("Dialog", "Название"))
        self.label_2.setText(_translate("Dialog", "Степень обжарки"))
        self.label_3.setText(_translate("Dialog", "В зёрнах"))
        self.label_4.setText(_translate("Dialog", "Цена"))
        self.label_5.setText(_translate("Dialog", "Объём упаковки"))
        self.label_6.setText(_translate("Dialog", "Описание"))
        self.pushButton.setText(_translate("Dialog", "Сохранить"))
        self.pushButton_2.setText(_translate("Dialog", "Отменить"))

    def __ReadData(self):
        # Подключение к БД
        con = sqlite3.connect(self.__db_name)

        # Создание курсора
        cur = con.cursor()

        # Формируем SQL
        sql = """
                select id, name, degree_name, in_grain, price, packing_volume, desc
                from coff
                where
                    id = ?
            """

        # Выполнение запроса и получение всех результатов
        result = cur.execute(sql, (self.__id,)).fetchall()

        # Переносим данные
        self.lineEdit.setText(result[0][1])
        self.textEdit.setText(result[0][6])

        self.lineEdit_2.setText(result[0][4])
        self.lineEdit_3.setText(str(result[0][5]))

        degree_name = result[0][2]
        if (degree_name == "слабая"):
            self.comboBox.setCurrentIndex(1)
        elif (degree_name == "средняя"):
            self.comboBox.setCurrentIndex(2)
        elif (degree_name == "сильная"):
            self.comboBox.setCurrentIndex(3)

        in_grain = result[0][3]
        self.checkBox.setChecked(in_grain == 1)

        con.close()

    def __exit(self):
        self.close()

    def __save(self):

        name = self.lineEdit.text()
        desc = self.textEdit.toPlainText()

        price = self.lineEdit_2.text()
        packing_volume = self.lineEdit_3.text()

        degree_name = self.comboBox.currentText()

        in_grain = 0
        if (self.checkBox.checkState()):
            in_grain = 1

        # Подключение к БД
        con = sqlite3.connect(self.__db_name)

        # Создание курсора
        cur = con.cursor()

        if (self.__id == 0):
            sql = """
                        insert into coff(name, degree_name, in_grain, price, packing_volume, desc)
                        values(?, ?, ?, ?, ?, ?)
                    """
            param = (name, degree_name, in_grain, price, packing_volume, desc)
        else:
            sql = """
                        update coff
                            set name = ?, 
                                degree_name = ?, 
                                in_grain = ?, 
                                price = ?, 
                                packing_volume = ?, 
                                desc = ?
                        where
                            id = ?
                    """
            param = (name, degree_name, in_grain, price, packing_volume, desc, self.__id)

        # Выполнение запроса и получение всех результатов
        cur.execute(sql, param)

        con.commit()
        con.close()

        self.__main_form.ReadData()
        self.close()
